[{"/home/lazaro/projetos/fad/frontend/src/App.js":"1","/home/lazaro/projetos/fad/frontend/src/pages/Login/index.js":"2","/home/lazaro/projetos/fad/frontend/src/components/Header/index.js":"3","/home/lazaro/projetos/fad/frontend/src/index.js":"4","/home/lazaro/projetos/fad/frontend/src/pages/Home/index.js":"5","/home/lazaro/projetos/fad/frontend/src/components/NewOccurrence/index.js":"6","/home/lazaro/projetos/fad/frontend/src/Routes.js":"7","/home/lazaro/projetos/fad/frontend/src/services/firebase.js":"8"},{"size":131,"mtime":1610572457274,"results":"9","hashOfConfig":"10"},{"size":1661,"mtime":1610575803610,"results":"11","hashOfConfig":"10"},{"size":2166,"mtime":1610664501448,"results":"12","hashOfConfig":"10"},{"size":311,"mtime":1610657147292,"results":"13","hashOfConfig":"10"},{"size":1431,"mtime":1610665760454,"results":"14","hashOfConfig":"10"},{"size":2136,"mtime":1610665143778,"results":"15","hashOfConfig":"10"},{"size":435,"mtime":1610574216880,"results":"16","hashOfConfig":"10"},{"size":639,"mtime":1610573152013,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"17b2ojg",{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/lazaro/projetos/fad/frontend/src/App.js",[],["37","38"],"/home/lazaro/projetos/fad/frontend/src/pages/Login/index.js",["39","40"],"import React from 'react'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { firebaseAuth } from '../../services/firebase';\n\nimport './styles.css';\n\n\nimport Imagem from '../../assets/images/bg-01.jpeg'\n\nfunction Login(){\n\n    const [ email, setEmail ] = useState('')\n    const [ password, setPassword ] = useState('')\n\n    const history = useHistory();\n\n    const redirect = async (e) => {\n        e.preventDefault();\n        try {\n            let resultAuth = await firebaseAuth().signInWithEmailAndPassword(email, password);\n            history.push('/home')\n        } catch (error) {\n            alert('Houve um erro: ' + error.message)\n        }\n        \n    }\n\n    return(\n        <div className='main-container'>\n            <div className='second-container'>\n                <div className='img-container'> \n                    <img src={Imagem}/>\n                </div>           \n\n                <div className='third-container'>\n                    <h1>Login</h1>   \n                    <form className='form-container' onSubmit={redirect}>\n                        <div>\n                            <input type='email' placeholder='Email' value={email} onChange={(e)=>setEmail(e.target.value)} />\n                        </div>\n                        <div>\n                            <input type='password' placeholder='Senha' value={password} onChange={(e) => setPassword(e.target.value)} />\n                        </div>\n                        <button>Entrar</button> \n                    </form>\n                    \n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","/home/lazaro/projetos/fad/frontend/src/components/Header/index.js",["41","42","43","44","45","46","47"],"/home/lazaro/projetos/fad/frontend/src/index.js",[],"/home/lazaro/projetos/fad/frontend/src/pages/Home/index.js",[],"/home/lazaro/projetos/fad/frontend/src/components/NewOccurrence/index.js",["48"],"import React, { useState } from 'react';\nimport './style.css'\nimport { firebaseFirestore } from '../../services/firebase';\nimport { Paragraph , Loader, Button } from 'rsuite'\n\n\nfunction Occurence() {\n\n    const [type, setType] = useState('')\n    const [sector, setSector] = useState('')\n    const [colaboration, setColaboration] = useState('')\n    const [occourence, setOccourence] = useState('')\n    const [loading, setLoading] = useState(false)\n\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            setLoading(true)\n            const resultFirestoreAdd = await firebaseFirestore.collection('occourence').add({\n                type: type,\n                sector: sector,\n                colaboration: colaboration,\n                occourence: occourence,\n                date: Date.now(),\n                teste: 'lazaro lindo',\n            });\n\n            console.log(resultFirestoreAdd)\n\n            setLoading(false)\n        } catch (error) {\n            alert('Error' + error.message)\n        }\n    }\n\n    return (    \n        <div className='occourence-container'>\n            {loading ? <Loader backdrop center content='carregando...'/> : ''}\n\n            <form onSubmit={handleSubmit}>\n                <label >Tipo </label>\n                <input\n                    type='text'\n                    placeholder='Tipo'\n                    value={type}\n                    onChange={e => setType(e.target.value)}\n                    readOnly={(loading === true )}/>\n                <label >Setor </label>\n                <input type='text' placeholder='Setor' value={sector} onChange={e => setSector(e.target.value)} />\n                <label >Colaborador </label>\n                <input type='text' placeholder='Colaborador' value={colaboration} onChange={e => setColaboration(e.target.value)} />\n                <label >Ocorrencia </label>\n                <textarea required value={occourence} onChange={e => setOccourence(e.target.value)} ></textarea>\n                <Button onClick={handleSubmit}>Registrar</Button>\n            </form>\n        </div>\n    )\n}\nexport default Occurence","/home/lazaro/projetos/fad/frontend/src/Routes.js",[],"/home/lazaro/projetos/fad/frontend/src/services/firebase.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":21,"column":17,"nodeType":"55","messageId":"56","endLine":21,"endColumn":27},{"ruleId":"57","severity":1,"message":"58","line":33,"column":21,"nodeType":"59","endLine":33,"endColumn":40},{"ruleId":"53","severity":1,"message":"60","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":16},{"ruleId":"53","severity":1,"message":"61","line":4,"column":33,"nodeType":"55","messageId":"56","endLine":4,"endColumn":37},{"ruleId":"53","severity":1,"message":"62","line":4,"column":44,"nodeType":"55","messageId":"56","endLine":4,"endColumn":48},{"ruleId":"53","severity":1,"message":"63","line":4,"column":50,"nodeType":"55","messageId":"56","endLine":4,"endColumn":53},{"ruleId":"53","severity":1,"message":"64","line":4,"column":55,"nodeType":"55","messageId":"56","endLine":4,"endColumn":58},{"ruleId":"65","severity":1,"message":"66","line":39,"column":21,"nodeType":"59","endLine":39,"endColumn":63},{"ruleId":"65","severity":1,"message":"67","line":49,"column":29,"nodeType":"59","endLine":49,"endColumn":54},{"ruleId":"53","severity":1,"message":"68","line":4,"column":10,"nodeType":"55","messageId":"56","endLine":4,"endColumn":19},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'resultAuth' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Icon' is defined but never used.","'Grid' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Paragraph' is defined but never used.","no-global-assign","no-unsafe-negation"]